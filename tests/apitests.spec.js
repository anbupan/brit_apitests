const { test, expect } = require("@playwright/test");
const postRequest = require("../test_data/post_request_body.json");
const { json } = require("stream/consumers");
test("partial update - patch test", async ({ request }) => {
  //create post api request to create an object
  const postAPIResponse = await request.post(
    "https://api.restful-api.dev/objects",
    {
      data: postRequest,
    }
  );
  const newid = await postAPIResponse.json();
  const id = newid.id;
  console.log("id=", id);
  //  GET api request to retrieve the changed object to capture initial value of name field
  const geturl = `https://api.restful-api.dev/objects/${id}`;
  const getAPIResponse = await request.get(geturl, {});
  const namedata = await getAPIResponse.json();
  const initialname = namedata.name;
  // validate status code
  console.log(await getAPIResponse.json());
  console.log("name=", initialname);
  expect(getAPIResponse.ok()).toBeTruthy();
  expect(getAPIResponse.status()).toBe(200);
  // patch update to update the name field
  const patchAPIResponse = await request.patch(
    `https://api.restful-api.dev/objects/${id}`,
    {
      headers: {
        "Content-Type": "application/json",
      },
      data: {
        name: "Apple MacBook Pro 18 (Updated Name20)",
      },
    }
  );
  // validate if the patched name is updated
  console.log(await patchAPIResponse.json());
  expect(patchAPIResponse.status()).toBe(200);
  const updatedname = patchAPIResponse.name;
  console.log("updatedname", updatedname);
  expect(updatedname).not.toBe(initialname);
});

test("Reserved id test - patch", async ({ request }) => {
  //  patch update to update the name field
  const patchAPIResponse = await request.patch(
    `https://api.restful-api.dev/objects/7`,
    {
      headers: {
        "Content-Type": "application/json",
      },
      data: {
        name: "Apple MacBook Pro 18 (Updated Name20)",
      },
    }
  );
  const reservedid_error = `7 is a reserved id and the data object of it cannot be overridden. You can create a new object via POST request and use new generated by id from it to send a PATCH request.`;
  // validate if the patched name is updated

  const patchresponse = await patchAPIResponse.json();
  const error = patchresponse.error;
  console.log(await patchAPIResponse.json());
  expect(patchAPIResponse.status()).toBe(405);
  expect(error).toBe(reservedid_error);
});
